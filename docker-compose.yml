version: '3.8'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/certs
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - event-horizon
    restart: unless-stopped

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    environment:
      - DEFAULT_EMAIL=peterkurkin1@gmail.com
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - event-horizon
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: horizon-app
    expose:
      - "8080"
    environment:
      - DB_HOST=event-horizon-db
      - DB_PORT=5432
      - VIRTUAL_HOST=event.bikini-bottom.com
      - LETSENCRYPT_HOST=event.bikini-bottom.com
      - LETSENCRYPT_EMAIL=peterkurkin1@gmail.com
      - MINIO_ACCESS_KEY=minio_user
      - MINIO_SECRET_KEY=minio_qwerty
    depends_on:
      - postgres
      - minio
    networks:
      - event-horizon
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: event-horizon-db
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: event_horizon_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - event-horizon

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_qwerty
    volumes:
      - minio_data:/data
    networks:
      - event-horizon

volumes:
  postgres_data:
  minio_data:

networks:
  event-horizon:
    driver: bridge
